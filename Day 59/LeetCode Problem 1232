You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.

 

 

Example 1:



Input: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]
Output: true
Example 2:



Input: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]
Output: false
 

Constraints:

2 <= coordinates.length <= 1000
coordinates[i].length == 2
-10^4 <= coordinates[i][0], coordinates[i][1] <= 10^4
coordinates contains no duplicate point.






/*
Solved by calculating the slope of the line and if slope is 1 then it is a straight line otherwise it is not
*/









class Solution {
public:
    bool checkStraightLine(vector<vector<int>>& c) {
        float slope;
        if((c[1][0] - c[0][0]) == 0){
            slope = INT_MAX;
            for(int i=1;i<c.size();i++){
                if((c[i][0] - c[i-1][0]) != 0){
                    return false;
                }
            }
            return true;
        }
        else{
            slope = (float)(c[1][1] - c[0][1])/(c[1][0] - c[0][0]);
            for(int i=1;i<c.size();i++){
                if(c[i][0] - c[i-1][0] == 0)
                    return false;
                if(slope != (float)(c[i][1] - c[i-1][1])/(c[i][0] - c[i-1][0]))
                    return false;
            }
            return true;
        }
    }
};
