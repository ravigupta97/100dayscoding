Given two arrays A and B of equal size, the advantage of A with respect to B is the number of indices i for which A[i] > B[i].

Return any permutation of A that maximizes its advantage with respect to B.

 

Example 1:

Input: A = [2,7,11,15], B = [1,10,4,11]
Output: [2,11,7,15]
Example 2:

Input: A = [12,24,8,32], B = [13,25,32,11]
Output: [24,32,8,12]
 

Note:

1 <= A.length = B.length <= 10000
0 <= A[i] <= 10^9
0 <= B[i] <= 10^9







/*
Solved by sorting the array and check if there is any permutation of A that maximizes its advantage with respect to B i.e number of indices i for which A[i] > B[i].
*/










class Solution {
public:
    vector<int> advantageCount(vector<int>& A, vector<int>& B) {
        sort(A.begin(),A.end());
        vector<int> ans;
        for(int i=0;i<B.size();i++){
            auto it=upper_bound(A.begin(),A.end(),B[i]);
            if(it!=A.end()){
                ans.push_back(A[it-A.begin()]);
                A.erase(it);
            }else{
                ans.push_back(A[0]);
                A.erase(A.begin());
            }
        }
        return ans;
    }
};
