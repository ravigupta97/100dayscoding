Given a palindromic string palindrome, replace exactly one character by any lowercase English letter so that the string becomes the lexicographically smallest possible string that isn't a palindrome.

After doing so, return the final string.  If there is no way to do so, return the empty string.

 

Example 1:

Input: palindrome = "abccba"
Output: "aaccba"
Example 2:

Input: palindrome = "a"
Output: ""
 

Constraints:

1 <= palindrome.length <= 1000
palindrome consists of only lowercase English letters.


/*
Solved by using the approach that checking over half of the string and if 'a' is not found replace it with 'a' 
and if only one char return empty string and replace last char with 'b'
*/



class Solution {
public:
    string breakPalindrome(string palindrome) {
       int n = palindrome.length();
        for(int i=0;i<n/2;++i){
            if(palindrome[i] != 'a'){
                palindrome[i] = 'a';
                return palindrome;
            }
        }
        palindrome[n-1] = 'b';
        if(n<2)
            return "";
        else
            return palindrome;
    }
};
