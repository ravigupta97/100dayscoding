Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers (h, k), where h is the height of the person and k is the number of people in front of this person who have a height greater than or equal to h. Write an algorithm to reconstruct the queue.

Note:
The number of people is less than 1,100.

 
Example

Input:
[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]

Output:
[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]







/*
Solved by firstly sorting the array and then traversing over the array and inserting the sorted people array into resultant vector
*/








bool comparator(vector<int> p1, vector<int> p2) {
    if(p1[0] > p2[0]){ 
        return true;
    } else if(p1[0] == p2[0]){
        return p1[1] < p2[1];
    } else {
        return false;
    }
}
class Solution {
public:
    vector<vector<int>> reconstructQueue(vector<vector<int>>& people) {
        int len = people.size();
        vector<vector<int>> ans;
        sort(people.begin(), people.end(), comparator);
        
        for(vector<int> p: people) {
            ans.insert(ans.begin()+p[1], p);
        }
        return ans;
    }
};
