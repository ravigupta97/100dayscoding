There are N children standing in a line. Each child is assigned a rating value.

You are giving candies to these children subjected to the following requirements:

Each child must have at least one candy.
Children with a higher rating get more candies than their neighbors.
What is the minimum candies you must give?

Example 1:

Input: [1,0,2]
Output: 5
Explanation: You can allocate to the first, second and third child with 2, 1, 2 candies respectively.
Example 2:

Input: [1,2,2]
Output: 4
Explanation: You can allocate to the first, second and third child with 1, 2, 1 candies respectively.
             The third child gets 1 candy because it satisfies the above two conditions.
             
             
             





/*
Solved by traversing over the vector and depending on weather the next element is greater or less than or equal calculate the maximum score and return it 
*/









class Solution {
public:
     int candy(vector<int>& ratings) {    
        int size = ratings.size();
        if (size == 0) return 0;
        int up = 1,down = 1, peak = 1, max_score = 1;
        for(int i = 1; i < size; ++i) {
            if (ratings[i] > ratings[i-1]) {
                peak = ++up;
                max_score += up;
                down = 1;
            } else if (ratings[i] == ratings[i-1]) {
                down = up = peak = 1;
                max_score += 1;
            } else {
                max_score += ++down;
                up = 1;
                if (peak >= down) {
                    max_score -= 1;
                }
            }
        }
        return max_score;
    }
};
