You are given an integer array nums. You can choose exactly one index (0-indexed) and remove the element. Notice that the index of the elements may change after the removal.

For example, if nums = [6,1,7,4,1]:

Choosing to remove index 1 results in nums = [6,7,4,1].
Choosing to remove index 2 results in nums = [6,1,4,1].
Choosing to remove index 4 results in nums = [6,1,7,4].
An array is fair if the sum of the odd-indexed values equals the sum of the even-indexed values.

Return the number of indices that you could choose such that after the removal, nums is fair.

 

Example 1:

Input: nums = [2,1,6,4]
Output: 1
Explanation:
Remove index 0: [1,6,4] -> Even sum: 1 + 4 = 5. Odd sum: 6. Not fair.
Remove index 1: [2,6,4] -> Even sum: 2 + 4 = 6. Odd sum: 6. Fair.
Remove index 2: [2,1,4] -> Even sum: 2 + 4 = 6. Odd sum: 1. Not fair.
Remove index 3: [2,1,6] -> Even sum: 2 + 6 = 8. Odd sum: 1. Not fair.
There is 1 index that you can remove to make nums fair.
Example 2:

Input: nums = [1,1,1]
Output: 3
Explanation: You can remove any index and the remaining array is fair.
Example 3:

Input: nums = [1,2,3]
Output: 0
Explanation: You cannot make a fair array after removing any index.
 

Constraints:

1 <= nums.length <= 105
1 <= nums[i] <= 104








/*
Solved by calculating all prefix sums for odd and even positions seperately and start removing character from the right
If remove the i-th element then all the elements behind this element will be shifted one place forward and 
all the even indexes in original array will become odd indexed and vice-versa and Calculate suffix sums and increment counter
whenever sum at even index equals sum at odd index
*/









class Solution {
public:
    int waysToMakeFair(vector<int>& a) 
    {
        const int n = a.size();
        
        int prefixEven = 0, prefixOdd = 0;
        for(int i = 0 ; i < n ; ++i)
        {
            if(i%2 == 0) prefixEven += a[i];
            else prefixOdd += a[i];
        }
        
        int suffixEven = 0, suffixOdd = 0;
        int count = 0;
        for(int i = n-1 ; i >= 0 ; --i)
        {
            if(i%2 == 0) prefixEven -= a[i];
            else prefixOdd -= a[i];
            
            if((prefixEven + suffixEven) == (prefixOdd + suffixOdd)) ++count;
            
            if(i%2 == 0) suffixOdd += a[i];
            else suffixEven += a[i];
        }
        return count;
    }
};
