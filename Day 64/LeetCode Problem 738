Given a non-negative integer N, find the largest number that is less than or equal to N with monotone increasing digits.

(Recall that an integer has monotone increasing digits if and only if each pair of adjacent digits x and y satisfy x <= y.)

Example 1:
Input: N = 10
Output: 9
Example 2:
Input: N = 1234
Output: 1234
Example 3:
Input: N = 332
Output: 299
Note: N is an integer in the range [0, 10^9].







/*
Solved by converting the number into string and then traversing over the string check weather x <= y for adjecent digits
*/







class Solution {
public:
    int monotoneIncreasingDigits(int N) {
        
        string str = to_string(N);
        
        int n = str.size(), l = n;
        
        for (int i = n-1; i > 0; i--)
        {
            if (str[i] >= str[i-1]) continue;
            
            --str[i-1];
            
            l = i;
        }
        
        for (int i = l; i < n; i++)
        {
            str[i] = '9';
        }
        
        return stoi(str);
    }
};
