Count the number of prime numbers less than a non-negative number, n.

 

Example 1:

Input: n = 10
Output: 4
Explanation: There are 4 prime numbers less than 10, they are 2, 3, 5, 7.
Example 2:

Input: n = 0
Output: 0
Example 3:

Input: n = 1
Output: 0
 

Constraints:

0 <= n <= 5 * 106








/*
Solved by using the algorithm, Sieve of eratosthenes that is used to calculate the count the prime numbers till the value of n and return the count
*/










class Solution {
public:
    int countPrimes(int n) 
    {
        if(n<=1)
            return 0;
        vector<int> sieve(n, -1);
        sieve[0] = sieve[1] = 1;
        for(int i=2; i<n; i++)
        {
            if(sieve[i]!=-1)
                continue;
            for(int j=i+i; j<n; j+=i)
            {
                sieve[j] = 1;
            }
        }
        int ans=0;
        for(int i=2; i<n; i++)
        {
            if(sieve[i]==-1) ans++;
        }
        return ans;
    }
};
